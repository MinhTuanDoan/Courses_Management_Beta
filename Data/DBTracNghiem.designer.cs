#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DBHTTN")]
	public partial class DBTracNghiemDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCOMPETION(COMPETION instance);
    partial void UpdateCOMPETION(COMPETION instance);
    partial void DeleteCOMPETION(COMPETION instance);
    partial void InsertDEMO_COMPETION(DEMO_COMPETION instance);
    partial void UpdateDEMO_COMPETION(DEMO_COMPETION instance);
    partial void DeleteDEMO_COMPETION(DEMO_COMPETION instance);
    partial void InsertDEMO_RESULT_TEMP(DEMO_RESULT_TEMP instance);
    partial void UpdateDEMO_RESULT_TEMP(DEMO_RESULT_TEMP instance);
    partial void DeleteDEMO_RESULT_TEMP(DEMO_RESULT_TEMP instance);
    partial void InsertDEMO_TEST(DEMO_TEST instance);
    partial void UpdateDEMO_TEST(DEMO_TEST instance);
    partial void DeleteDEMO_TEST(DEMO_TEST instance);
    partial void InsertDEMO_TEST_DETAIL(DEMO_TEST_DETAIL instance);
    partial void UpdateDEMO_TEST_DETAIL(DEMO_TEST_DETAIL instance);
    partial void DeleteDEMO_TEST_DETAIL(DEMO_TEST_DETAIL instance);
    partial void InsertGRADE(GRADE instance);
    partial void UpdateGRADE(GRADE instance);
    partial void DeleteGRADE(GRADE instance);
    partial void InsertGUEST(GUEST instance);
    partial void UpdateGUEST(GUEST instance);
    partial void DeleteGUEST(GUEST instance);
    partial void InsertLEVELQUIZ(LEVELQUIZ instance);
    partial void UpdateLEVELQUIZ(LEVELQUIZ instance);
    partial void DeleteLEVELQUIZ(LEVELQUIZ instance);
    partial void InsertQUIZ(QUIZ instance);
    partial void UpdateQUIZ(QUIZ instance);
    partial void DeleteQUIZ(QUIZ instance);
    partial void InsertRESULT(RESULT instance);
    partial void UpdateRESULT(RESULT instance);
    partial void DeleteRESULT(RESULT instance);
    partial void InsertRESULT_TEMP(RESULT_TEMP instance);
    partial void UpdateRESULT_TEMP(RESULT_TEMP instance);
    partial void DeleteRESULT_TEMP(RESULT_TEMP instance);
    partial void InsertSTUDENT(STUDENT instance);
    partial void UpdateSTUDENT(STUDENT instance);
    partial void DeleteSTUDENT(STUDENT instance);
    partial void InsertSUBTRACT(SUBTRACT instance);
    partial void UpdateSUBTRACT(SUBTRACT instance);
    partial void DeleteSUBTRACT(SUBTRACT instance);
    partial void InsertTEACHER(TEACHER instance);
    partial void UpdateTEACHER(TEACHER instance);
    partial void DeleteTEACHER(TEACHER instance);
    partial void InsertTEST_DETAIL(TEST_DETAIL instance);
    partial void UpdateTEST_DETAIL(TEST_DETAIL instance);
    partial void DeleteTEST_DETAIL(TEST_DETAIL instance);
    partial void InsertTEST(TEST instance);
    partial void UpdateTEST(TEST instance);
    partial void DeleteTEST(TEST instance);
    partial void InsertTYPE(TYPE instance);
    partial void UpdateTYPE(TYPE instance);
    partial void DeleteTYPE(TYPE instance);
    #endregion
		
		public DBTracNghiemDataContext() : 
				base(global::Data.Properties.Settings.Default.DBHTTNConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBTracNghiemDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBTracNghiemDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBTracNghiemDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBTracNghiemDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<COMPETION> COMPETIONs
		{
			get
			{
				return this.GetTable<COMPETION>();
			}
		}
		
		public System.Data.Linq.Table<DEMO_COMPETION> DEMO_COMPETIONs
		{
			get
			{
				return this.GetTable<DEMO_COMPETION>();
			}
		}
		
		public System.Data.Linq.Table<DEMO_RESULT_TEMP> DEMO_RESULT_TEMPs
		{
			get
			{
				return this.GetTable<DEMO_RESULT_TEMP>();
			}
		}
		
		public System.Data.Linq.Table<DEMO_TEST> DEMO_TESTs
		{
			get
			{
				return this.GetTable<DEMO_TEST>();
			}
		}
		
		public System.Data.Linq.Table<DEMO_TEST_DETAIL> DEMO_TEST_DETAILs
		{
			get
			{
				return this.GetTable<DEMO_TEST_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<GRADE> GRADEs
		{
			get
			{
				return this.GetTable<GRADE>();
			}
		}
		
		public System.Data.Linq.Table<GUEST> GUESTs
		{
			get
			{
				return this.GetTable<GUEST>();
			}
		}
		
		public System.Data.Linq.Table<LEVELQUIZ> LEVELQUIZs
		{
			get
			{
				return this.GetTable<LEVELQUIZ>();
			}
		}
		
		public System.Data.Linq.Table<QUIZ> QUIZs
		{
			get
			{
				return this.GetTable<QUIZ>();
			}
		}
		
		public System.Data.Linq.Table<RESULT> RESULTs
		{
			get
			{
				return this.GetTable<RESULT>();
			}
		}
		
		public System.Data.Linq.Table<RESULT_TEMP> RESULT_TEMPs
		{
			get
			{
				return this.GetTable<RESULT_TEMP>();
			}
		}
		
		public System.Data.Linq.Table<STUDENT> STUDENTs
		{
			get
			{
				return this.GetTable<STUDENT>();
			}
		}
		
		public System.Data.Linq.Table<SUBTRACT> SUBTRACTs
		{
			get
			{
				return this.GetTable<SUBTRACT>();
			}
		}
		
		public System.Data.Linq.Table<TEACHER> TEACHERs
		{
			get
			{
				return this.GetTable<TEACHER>();
			}
		}
		
		public System.Data.Linq.Table<TEST_DETAIL> TEST_DETAILs
		{
			get
			{
				return this.GetTable<TEST_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<TEST> TESTs
		{
			get
			{
				return this.GetTable<TEST>();
			}
		}
		
		public System.Data.Linq.Table<TYPE> TYPEs
		{
			get
			{
				return this.GetTable<TYPE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COMPETION")]
	public partial class COMPETION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _subtractID;
		
		private System.Nullable<System.DateTime> _testDateBegin;
		
		private System.Nullable<int> _testTimeToLive;
		
		private System.Nullable<int> _gradeid;
		
		private System.Nullable<int> _idtest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnsubtractIDChanging(string value);
    partial void OnsubtractIDChanged();
    partial void OntestDateBeginChanging(System.Nullable<System.DateTime> value);
    partial void OntestDateBeginChanged();
    partial void OntestTimeToLiveChanging(System.Nullable<int> value);
    partial void OntestTimeToLiveChanged();
    partial void OngradeidChanging(System.Nullable<int> value);
    partial void OngradeidChanged();
    partial void OnidtestChanging(System.Nullable<int> value);
    partial void OnidtestChanged();
    #endregion
		
		public COMPETION()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subtractID", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string subtractID
		{
			get
			{
				return this._subtractID;
			}
			set
			{
				if ((this._subtractID != value))
				{
					this.OnsubtractIDChanging(value);
					this.SendPropertyChanging();
					this._subtractID = value;
					this.SendPropertyChanged("subtractID");
					this.OnsubtractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_testDateBegin", DbType="DateTime")]
		public System.Nullable<System.DateTime> testDateBegin
		{
			get
			{
				return this._testDateBegin;
			}
			set
			{
				if ((this._testDateBegin != value))
				{
					this.OntestDateBeginChanging(value);
					this.SendPropertyChanging();
					this._testDateBegin = value;
					this.SendPropertyChanged("testDateBegin");
					this.OntestDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_testTimeToLive", DbType="Int")]
		public System.Nullable<int> testTimeToLive
		{
			get
			{
				return this._testTimeToLive;
			}
			set
			{
				if ((this._testTimeToLive != value))
				{
					this.OntestTimeToLiveChanging(value);
					this.SendPropertyChanging();
					this._testTimeToLive = value;
					this.SendPropertyChanged("testTimeToLive");
					this.OntestTimeToLiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gradeid", DbType="Int")]
		public System.Nullable<int> gradeid
		{
			get
			{
				return this._gradeid;
			}
			set
			{
				if ((this._gradeid != value))
				{
					this.OngradeidChanging(value);
					this.SendPropertyChanging();
					this._gradeid = value;
					this.SendPropertyChanged("gradeid");
					this.OngradeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idtest", DbType="Int")]
		public System.Nullable<int> idtest
		{
			get
			{
				return this._idtest;
			}
			set
			{
				if ((this._idtest != value))
				{
					this.OnidtestChanging(value);
					this.SendPropertyChanging();
					this._idtest = value;
					this.SendPropertyChanged("idtest");
					this.OnidtestChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEMO_COMPETION")]
	public partial class DEMO_COMPETION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _demoCompID;
		
		private string _subtractID;
		
		private System.Nullable<System.DateTime> _expDate;
		
		private System.Nullable<int> _gradeid;
		
		private System.Nullable<int> _iddemotest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndemoCompIDChanging(int value);
    partial void OndemoCompIDChanged();
    partial void OnsubtractIDChanging(string value);
    partial void OnsubtractIDChanged();
    partial void OnexpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexpDateChanged();
    partial void OngradeidChanging(System.Nullable<int> value);
    partial void OngradeidChanged();
    partial void OniddemotestChanging(System.Nullable<int> value);
    partial void OniddemotestChanged();
    #endregion
		
		public DEMO_COMPETION()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_demoCompID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int demoCompID
		{
			get
			{
				return this._demoCompID;
			}
			set
			{
				if ((this._demoCompID != value))
				{
					this.OndemoCompIDChanging(value);
					this.SendPropertyChanging();
					this._demoCompID = value;
					this.SendPropertyChanged("demoCompID");
					this.OndemoCompIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subtractID", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string subtractID
		{
			get
			{
				return this._subtractID;
			}
			set
			{
				if ((this._subtractID != value))
				{
					this.OnsubtractIDChanging(value);
					this.SendPropertyChanging();
					this._subtractID = value;
					this.SendPropertyChanged("subtractID");
					this.OnsubtractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> expDate
		{
			get
			{
				return this._expDate;
			}
			set
			{
				if ((this._expDate != value))
				{
					this.OnexpDateChanging(value);
					this.SendPropertyChanging();
					this._expDate = value;
					this.SendPropertyChanged("expDate");
					this.OnexpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gradeid", DbType="Int")]
		public System.Nullable<int> gradeid
		{
			get
			{
				return this._gradeid;
			}
			set
			{
				if ((this._gradeid != value))
				{
					this.OngradeidChanging(value);
					this.SendPropertyChanging();
					this._gradeid = value;
					this.SendPropertyChanged("gradeid");
					this.OngradeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iddemotest", DbType="Int")]
		public System.Nullable<int> iddemotest
		{
			get
			{
				return this._iddemotest;
			}
			set
			{
				if ((this._iddemotest != value))
				{
					this.OniddemotestChanging(value);
					this.SendPropertyChanging();
					this._iddemotest = value;
					this.SendPropertyChanged("iddemotest");
					this.OniddemotestChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEMO_RESULT_TEMP")]
	public partial class DEMO_RESULT_TEMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stt;
		
		private int _idQuiz;
		
		private System.Nullable<char> _answer;
		
		private System.Nullable<bool> _truefalse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsttChanging(int value);
    partial void OnsttChanged();
    partial void OnidQuizChanging(int value);
    partial void OnidQuizChanged();
    partial void OnanswerChanging(System.Nullable<char> value);
    partial void OnanswerChanged();
    partial void OntruefalseChanging(System.Nullable<bool> value);
    partial void OntruefalseChanged();
    #endregion
		
		public DEMO_RESULT_TEMP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stt", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int stt
		{
			get
			{
				return this._stt;
			}
			set
			{
				if ((this._stt != value))
				{
					this.OnsttChanging(value);
					this.SendPropertyChanging();
					this._stt = value;
					this.SendPropertyChanged("stt");
					this.OnsttChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idQuiz", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idQuiz
		{
			get
			{
				return this._idQuiz;
			}
			set
			{
				if ((this._idQuiz != value))
				{
					this.OnidQuizChanging(value);
					this.SendPropertyChanging();
					this._idQuiz = value;
					this.SendPropertyChanged("idQuiz");
					this.OnidQuizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer", DbType="NChar(1)")]
		public System.Nullable<char> answer
		{
			get
			{
				return this._answer;
			}
			set
			{
				if ((this._answer != value))
				{
					this.OnanswerChanging(value);
					this.SendPropertyChanging();
					this._answer = value;
					this.SendPropertyChanged("answer");
					this.OnanswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_truefalse", DbType="Bit")]
		public System.Nullable<bool> truefalse
		{
			get
			{
				return this._truefalse;
			}
			set
			{
				if ((this._truefalse != value))
				{
					this.OntruefalseChanging(value);
					this.SendPropertyChanging();
					this._truefalse = value;
					this.SendPropertyChanged("truefalse");
					this.OntruefalseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEMO_TEST")]
	public partial class DEMO_TEST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _demoTestID;
		
		private string _subtractID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndemoTestIDChanging(int value);
    partial void OndemoTestIDChanged();
    partial void OnsubtractIDChanging(string value);
    partial void OnsubtractIDChanged();
    #endregion
		
		public DEMO_TEST()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_demoTestID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int demoTestID
		{
			get
			{
				return this._demoTestID;
			}
			set
			{
				if ((this._demoTestID != value))
				{
					this.OndemoTestIDChanging(value);
					this.SendPropertyChanging();
					this._demoTestID = value;
					this.SendPropertyChanged("demoTestID");
					this.OndemoTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subtractID", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string subtractID
		{
			get
			{
				return this._subtractID;
			}
			set
			{
				if ((this._subtractID != value))
				{
					this.OnsubtractIDChanging(value);
					this.SendPropertyChanging();
					this._subtractID = value;
					this.SendPropertyChanged("subtractID");
					this.OnsubtractIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEMO_TEST_DETAIL")]
	public partial class DEMO_TEST_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _demoIdTest;
		
		private string _subtractID;
		
		private int _stt;
		
		private System.Nullable<int> _quizID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndemoIdTestChanging(int value);
    partial void OndemoIdTestChanged();
    partial void OnsubtractIDChanging(string value);
    partial void OnsubtractIDChanged();
    partial void OnsttChanging(int value);
    partial void OnsttChanged();
    partial void OnquizIDChanging(System.Nullable<int> value);
    partial void OnquizIDChanged();
    #endregion
		
		public DEMO_TEST_DETAIL()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_demoIdTest", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int demoIdTest
		{
			get
			{
				return this._demoIdTest;
			}
			set
			{
				if ((this._demoIdTest != value))
				{
					this.OndemoIdTestChanging(value);
					this.SendPropertyChanging();
					this._demoIdTest = value;
					this.SendPropertyChanged("demoIdTest");
					this.OndemoIdTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subtractID", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string subtractID
		{
			get
			{
				return this._subtractID;
			}
			set
			{
				if ((this._subtractID != value))
				{
					this.OnsubtractIDChanging(value);
					this.SendPropertyChanging();
					this._subtractID = value;
					this.SendPropertyChanged("subtractID");
					this.OnsubtractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stt", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int stt
		{
			get
			{
				return this._stt;
			}
			set
			{
				if ((this._stt != value))
				{
					this.OnsttChanging(value);
					this.SendPropertyChanging();
					this._stt = value;
					this.SendPropertyChanged("stt");
					this.OnsttChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quizID", DbType="Int")]
		public System.Nullable<int> quizID
		{
			get
			{
				return this._quizID;
			}
			set
			{
				if ((this._quizID != value))
				{
					this.OnquizIDChanging(value);
					this.SendPropertyChanging();
					this._quizID = value;
					this.SendPropertyChanged("quizID");
					this.OnquizIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GRADE")]
	public partial class GRADE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _gradeName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OngradeNameChanging(System.Nullable<int> value);
    partial void OngradeNameChanged();
    #endregion
		
		public GRADE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gradeName", DbType="Int")]
		public System.Nullable<int> gradeName
		{
			get
			{
				return this._gradeName;
			}
			set
			{
				if ((this._gradeName != value))
				{
					this.OngradeNameChanging(value);
					this.SendPropertyChanging();
					this._gradeName = value;
					this.SendPropertyChanged("gradeName");
					this.OngradeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GUEST")]
	public partial class GUEST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _guestid;
		
		private string _guestpassword;
		
		private string _guestName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnguestidChanging(string value);
    partial void OnguestidChanged();
    partial void OnguestpasswordChanging(string value);
    partial void OnguestpasswordChanged();
    partial void OnguestNameChanging(string value);
    partial void OnguestNameChanged();
    #endregion
		
		public GUEST()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guestid", DbType="NChar(30)")]
		public string guestid
		{
			get
			{
				return this._guestid;
			}
			set
			{
				if ((this._guestid != value))
				{
					this.OnguestidChanging(value);
					this.SendPropertyChanging();
					this._guestid = value;
					this.SendPropertyChanged("guestid");
					this.OnguestidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guestpassword", DbType="NChar(1000)")]
		public string guestpassword
		{
			get
			{
				return this._guestpassword;
			}
			set
			{
				if ((this._guestpassword != value))
				{
					this.OnguestpasswordChanging(value);
					this.SendPropertyChanging();
					this._guestpassword = value;
					this.SendPropertyChanged("guestpassword");
					this.OnguestpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guestName", DbType="NVarChar(50)")]
		public string guestName
		{
			get
			{
				return this._guestName;
			}
			set
			{
				if ((this._guestName != value))
				{
					this.OnguestNameChanging(value);
					this.SendPropertyChanging();
					this._guestName = value;
					this.SendPropertyChanged("guestName");
					this.OnguestNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LEVELQUIZ")]
	public partial class LEVELQUIZ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _levelQuizz;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnlevelQuizzChanging(string value);
    partial void OnlevelQuizzChanged();
    #endregion
		
		public LEVELQUIZ()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_levelQuizz", DbType="NVarChar(50)")]
		public string levelQuizz
		{
			get
			{
				return this._levelQuizz;
			}
			set
			{
				if ((this._levelQuizz != value))
				{
					this.OnlevelQuizzChanging(value);
					this.SendPropertyChanging();
					this._levelQuizz = value;
					this.SendPropertyChanged("levelQuizz");
					this.OnlevelQuizzChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUIZ")]
	public partial class QUIZ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _idSubtract;
		
		private string _quizz;
		
		private string _a;
		
		private string _b;
		
		private string _c;
		
		private string _d;
		
		private System.Nullable<char> _answer;
		
		private System.Nullable<int> _rateHard;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidSubtractChanging(string value);
    partial void OnidSubtractChanged();
    partial void OnquizzChanging(string value);
    partial void OnquizzChanged();
    partial void OnaChanging(string value);
    partial void OnaChanged();
    partial void OnbChanging(string value);
    partial void OnbChanged();
    partial void OncChanging(string value);
    partial void OncChanged();
    partial void OndChanging(string value);
    partial void OndChanged();
    partial void OnanswerChanging(System.Nullable<char> value);
    partial void OnanswerChanged();
    partial void OnrateHardChanging(System.Nullable<int> value);
    partial void OnrateHardChanged();
    #endregion
		
		public QUIZ()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSubtract", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idSubtract
		{
			get
			{
				return this._idSubtract;
			}
			set
			{
				if ((this._idSubtract != value))
				{
					this.OnidSubtractChanging(value);
					this.SendPropertyChanging();
					this._idSubtract = value;
					this.SendPropertyChanged("idSubtract");
					this.OnidSubtractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quizz", DbType="NVarChar(1000)")]
		public string quizz
		{
			get
			{
				return this._quizz;
			}
			set
			{
				if ((this._quizz != value))
				{
					this.OnquizzChanging(value);
					this.SendPropertyChanging();
					this._quizz = value;
					this.SendPropertyChanged("quizz");
					this.OnquizzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a", DbType="NVarChar(1000)")]
		public string a
		{
			get
			{
				return this._a;
			}
			set
			{
				if ((this._a != value))
				{
					this.OnaChanging(value);
					this.SendPropertyChanging();
					this._a = value;
					this.SendPropertyChanged("a");
					this.OnaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_b", DbType="NVarChar(1000)")]
		public string b
		{
			get
			{
				return this._b;
			}
			set
			{
				if ((this._b != value))
				{
					this.OnbChanging(value);
					this.SendPropertyChanging();
					this._b = value;
					this.SendPropertyChanged("b");
					this.OnbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c", DbType="NVarChar(1000)")]
		public string c
		{
			get
			{
				return this._c;
			}
			set
			{
				if ((this._c != value))
				{
					this.OncChanging(value);
					this.SendPropertyChanging();
					this._c = value;
					this.SendPropertyChanged("c");
					this.OncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d", DbType="NVarChar(1000)")]
		public string d
		{
			get
			{
				return this._d;
			}
			set
			{
				if ((this._d != value))
				{
					this.OndChanging(value);
					this.SendPropertyChanging();
					this._d = value;
					this.SendPropertyChanged("d");
					this.OndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer", DbType="NChar(1)")]
		public System.Nullable<char> answer
		{
			get
			{
				return this._answer;
			}
			set
			{
				if ((this._answer != value))
				{
					this.OnanswerChanging(value);
					this.SendPropertyChanging();
					this._answer = value;
					this.SendPropertyChanged("answer");
					this.OnanswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rateHard", DbType="Int")]
		public System.Nullable<int> rateHard
		{
			get
			{
				return this._rateHard;
			}
			set
			{
				if ((this._rateHard != value))
				{
					this.OnrateHardChanging(value);
					this.SendPropertyChanging();
					this._rateHard = value;
					this.SendPropertyChanged("rateHard");
					this.OnrateHardChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RESULT")]
	public partial class RESULT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCom;
		
		private string _idSubtract;
		
		private int _idStudent;
		
		private System.Nullable<double> _score;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidComChanging(int value);
    partial void OnidComChanged();
    partial void OnidSubtractChanging(string value);
    partial void OnidSubtractChanged();
    partial void OnidStudentChanging(int value);
    partial void OnidStudentChanged();
    partial void OnscoreChanging(System.Nullable<double> value);
    partial void OnscoreChanged();
    #endregion
		
		public RESULT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCom", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idCom
		{
			get
			{
				return this._idCom;
			}
			set
			{
				if ((this._idCom != value))
				{
					this.OnidComChanging(value);
					this.SendPropertyChanging();
					this._idCom = value;
					this.SendPropertyChanged("idCom");
					this.OnidComChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSubtract", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idSubtract
		{
			get
			{
				return this._idSubtract;
			}
			set
			{
				if ((this._idSubtract != value))
				{
					this.OnidSubtractChanging(value);
					this.SendPropertyChanging();
					this._idSubtract = value;
					this.SendPropertyChanged("idSubtract");
					this.OnidSubtractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idStudent", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idStudent
		{
			get
			{
				return this._idStudent;
			}
			set
			{
				if ((this._idStudent != value))
				{
					this.OnidStudentChanging(value);
					this.SendPropertyChanging();
					this._idStudent = value;
					this.SendPropertyChanged("idStudent");
					this.OnidStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_score", DbType="Float")]
		public System.Nullable<double> score
		{
			get
			{
				return this._score;
			}
			set
			{
				if ((this._score != value))
				{
					this.OnscoreChanging(value);
					this.SendPropertyChanging();
					this._score = value;
					this.SendPropertyChanged("score");
					this.OnscoreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RESULT_TEMP")]
	public partial class RESULT_TEMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCompe;
		
		private int _idStudent;
		
		private string _idSubtract;
		
		private int _idQuiz;
		
		private System.Nullable<char> _answer;
		
		private System.Nullable<bool> _truefalse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCompeChanging(int value);
    partial void OnidCompeChanged();
    partial void OnidStudentChanging(int value);
    partial void OnidStudentChanged();
    partial void OnidSubtractChanging(string value);
    partial void OnidSubtractChanged();
    partial void OnidQuizChanging(int value);
    partial void OnidQuizChanged();
    partial void OnanswerChanging(System.Nullable<char> value);
    partial void OnanswerChanged();
    partial void OntruefalseChanging(System.Nullable<bool> value);
    partial void OntruefalseChanged();
    #endregion
		
		public RESULT_TEMP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCompe", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idCompe
		{
			get
			{
				return this._idCompe;
			}
			set
			{
				if ((this._idCompe != value))
				{
					this.OnidCompeChanging(value);
					this.SendPropertyChanging();
					this._idCompe = value;
					this.SendPropertyChanged("idCompe");
					this.OnidCompeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idStudent", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idStudent
		{
			get
			{
				return this._idStudent;
			}
			set
			{
				if ((this._idStudent != value))
				{
					this.OnidStudentChanging(value);
					this.SendPropertyChanging();
					this._idStudent = value;
					this.SendPropertyChanged("idStudent");
					this.OnidStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSubtract", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idSubtract
		{
			get
			{
				return this._idSubtract;
			}
			set
			{
				if ((this._idSubtract != value))
				{
					this.OnidSubtractChanging(value);
					this.SendPropertyChanging();
					this._idSubtract = value;
					this.SendPropertyChanged("idSubtract");
					this.OnidSubtractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idQuiz", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idQuiz
		{
			get
			{
				return this._idQuiz;
			}
			set
			{
				if ((this._idQuiz != value))
				{
					this.OnidQuizChanging(value);
					this.SendPropertyChanging();
					this._idQuiz = value;
					this.SendPropertyChanged("idQuiz");
					this.OnidQuizChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer", DbType="NChar(1)")]
		public System.Nullable<char> answer
		{
			get
			{
				return this._answer;
			}
			set
			{
				if ((this._answer != value))
				{
					this.OnanswerChanging(value);
					this.SendPropertyChanging();
					this._answer = value;
					this.SendPropertyChanged("answer");
					this.OnanswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_truefalse", DbType="Bit")]
		public System.Nullable<bool> truefalse
		{
			get
			{
				return this._truefalse;
			}
			set
			{
				if ((this._truefalse != value))
				{
					this.OntruefalseChanging(value);
					this.SendPropertyChanging();
					this._truefalse = value;
					this.SendPropertyChanged("truefalse");
					this.OntruefalseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STUDENT")]
	public partial class STUDENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _studentID;
		
		private string _studentPassword;
		
		private string _studentFullname;
		
		private System.Nullable<System.DateTime> _studentBirthday;
		
		private string _studentEmail;
		
		private System.Nullable<int> _studentClass;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstudentIDChanging(string value);
    partial void OnstudentIDChanged();
    partial void OnstudentPasswordChanging(string value);
    partial void OnstudentPasswordChanged();
    partial void OnstudentFullnameChanging(string value);
    partial void OnstudentFullnameChanged();
    partial void OnstudentBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnstudentBirthdayChanged();
    partial void OnstudentEmailChanging(string value);
    partial void OnstudentEmailChanged();
    partial void OnstudentClassChanging(System.Nullable<int> value);
    partial void OnstudentClassChanged();
    #endregion
		
		public STUDENT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentID", DbType="NChar(25)")]
		public string studentID
		{
			get
			{
				return this._studentID;
			}
			set
			{
				if ((this._studentID != value))
				{
					this.OnstudentIDChanging(value);
					this.SendPropertyChanging();
					this._studentID = value;
					this.SendPropertyChanged("studentID");
					this.OnstudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentPassword", DbType="NChar(1000)")]
		public string studentPassword
		{
			get
			{
				return this._studentPassword;
			}
			set
			{
				if ((this._studentPassword != value))
				{
					this.OnstudentPasswordChanging(value);
					this.SendPropertyChanging();
					this._studentPassword = value;
					this.SendPropertyChanged("studentPassword");
					this.OnstudentPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentFullname", DbType="NVarChar(50)")]
		public string studentFullname
		{
			get
			{
				return this._studentFullname;
			}
			set
			{
				if ((this._studentFullname != value))
				{
					this.OnstudentFullnameChanging(value);
					this.SendPropertyChanging();
					this._studentFullname = value;
					this.SendPropertyChanged("studentFullname");
					this.OnstudentFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentBirthday", DbType="Date")]
		public System.Nullable<System.DateTime> studentBirthday
		{
			get
			{
				return this._studentBirthday;
			}
			set
			{
				if ((this._studentBirthday != value))
				{
					this.OnstudentBirthdayChanging(value);
					this.SendPropertyChanging();
					this._studentBirthday = value;
					this.SendPropertyChanged("studentBirthday");
					this.OnstudentBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentEmail", DbType="NChar(30)")]
		public string studentEmail
		{
			get
			{
				return this._studentEmail;
			}
			set
			{
				if ((this._studentEmail != value))
				{
					this.OnstudentEmailChanging(value);
					this.SendPropertyChanging();
					this._studentEmail = value;
					this.SendPropertyChanged("studentEmail");
					this.OnstudentEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studentClass", DbType="Int")]
		public System.Nullable<int> studentClass
		{
			get
			{
				return this._studentClass;
			}
			set
			{
				if ((this._studentClass != value))
				{
					this.OnstudentClassChanging(value);
					this.SendPropertyChanging();
					this._studentClass = value;
					this.SendPropertyChanged("studentClass");
					this.OnstudentClassChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SUBTRACT")]
	public partial class SUBTRACT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private System.Nullable<int> _gradeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OngradeIDChanging(System.Nullable<int> value);
    partial void OngradeIDChanged();
    #endregion
		
		public SUBTRACT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gradeID", DbType="Int")]
		public System.Nullable<int> gradeID
		{
			get
			{
				return this._gradeID;
			}
			set
			{
				if ((this._gradeID != value))
				{
					this.OngradeIDChanging(value);
					this.SendPropertyChanging();
					this._gradeID = value;
					this.SendPropertyChanged("gradeID");
					this.OngradeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TEACHER")]
	public partial class TEACHER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _teacherID;
		
		private string _teacherPassword;
		
		private string _teacherFullname;
		
		private string _teacherEmail;
		
		private System.Nullable<System.DateTime> _teacherBirthday;
		
		private System.Nullable<int> _teacherSchema;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnteacherIDChanging(string value);
    partial void OnteacherIDChanged();
    partial void OnteacherPasswordChanging(string value);
    partial void OnteacherPasswordChanged();
    partial void OnteacherFullnameChanging(string value);
    partial void OnteacherFullnameChanged();
    partial void OnteacherEmailChanging(string value);
    partial void OnteacherEmailChanged();
    partial void OnteacherBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnteacherBirthdayChanged();
    partial void OnteacherSchemaChanging(System.Nullable<int> value);
    partial void OnteacherSchemaChanged();
    #endregion
		
		public TEACHER()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacherID", DbType="NChar(30)")]
		public string teacherID
		{
			get
			{
				return this._teacherID;
			}
			set
			{
				if ((this._teacherID != value))
				{
					this.OnteacherIDChanging(value);
					this.SendPropertyChanging();
					this._teacherID = value;
					this.SendPropertyChanged("teacherID");
					this.OnteacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacherPassword", DbType="NChar(1000)")]
		public string teacherPassword
		{
			get
			{
				return this._teacherPassword;
			}
			set
			{
				if ((this._teacherPassword != value))
				{
					this.OnteacherPasswordChanging(value);
					this.SendPropertyChanging();
					this._teacherPassword = value;
					this.SendPropertyChanged("teacherPassword");
					this.OnteacherPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacherFullname", DbType="NVarChar(50)")]
		public string teacherFullname
		{
			get
			{
				return this._teacherFullname;
			}
			set
			{
				if ((this._teacherFullname != value))
				{
					this.OnteacherFullnameChanging(value);
					this.SendPropertyChanging();
					this._teacherFullname = value;
					this.SendPropertyChanged("teacherFullname");
					this.OnteacherFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacherEmail", DbType="NChar(25)")]
		public string teacherEmail
		{
			get
			{
				return this._teacherEmail;
			}
			set
			{
				if ((this._teacherEmail != value))
				{
					this.OnteacherEmailChanging(value);
					this.SendPropertyChanging();
					this._teacherEmail = value;
					this.SendPropertyChanged("teacherEmail");
					this.OnteacherEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacherBirthday", DbType="Date")]
		public System.Nullable<System.DateTime> teacherBirthday
		{
			get
			{
				return this._teacherBirthday;
			}
			set
			{
				if ((this._teacherBirthday != value))
				{
					this.OnteacherBirthdayChanging(value);
					this.SendPropertyChanging();
					this._teacherBirthday = value;
					this.SendPropertyChanged("teacherBirthday");
					this.OnteacherBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teacherSchema", DbType="Int")]
		public System.Nullable<int> teacherSchema
		{
			get
			{
				return this._teacherSchema;
			}
			set
			{
				if ((this._teacherSchema != value))
				{
					this.OnteacherSchemaChanging(value);
					this.SendPropertyChanging();
					this._teacherSchema = value;
					this.SendPropertyChanged("teacherSchema");
					this.OnteacherSchemaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TEST_DETAIL")]
	public partial class TEST_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _testID;
		
		private string _subtractID;
		
		private int _stt;
		
		private System.Nullable<int> _quizID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntestIDChanging(int value);
    partial void OntestIDChanged();
    partial void OnsubtractIDChanging(string value);
    partial void OnsubtractIDChanged();
    partial void OnsttChanging(int value);
    partial void OnsttChanged();
    partial void OnquizIDChanging(System.Nullable<int> value);
    partial void OnquizIDChanged();
    #endregion
		
		public TEST_DETAIL()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_testID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int testID
		{
			get
			{
				return this._testID;
			}
			set
			{
				if ((this._testID != value))
				{
					this.OntestIDChanging(value);
					this.SendPropertyChanging();
					this._testID = value;
					this.SendPropertyChanged("testID");
					this.OntestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subtractID", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string subtractID
		{
			get
			{
				return this._subtractID;
			}
			set
			{
				if ((this._subtractID != value))
				{
					this.OnsubtractIDChanging(value);
					this.SendPropertyChanging();
					this._subtractID = value;
					this.SendPropertyChanged("subtractID");
					this.OnsubtractIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stt", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int stt
		{
			get
			{
				return this._stt;
			}
			set
			{
				if ((this._stt != value))
				{
					this.OnsttChanging(value);
					this.SendPropertyChanging();
					this._stt = value;
					this.SendPropertyChanged("stt");
					this.OnsttChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quizID", DbType="Int")]
		public System.Nullable<int> quizID
		{
			get
			{
				return this._quizID;
			}
			set
			{
				if ((this._quizID != value))
				{
					this.OnquizIDChanging(value);
					this.SendPropertyChanging();
					this._quizID = value;
					this.SendPropertyChanged("quizID");
					this.OnquizIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TEST")]
	public partial class TEST : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _subtractID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnsubtractIDChanging(string value);
    partial void OnsubtractIDChanged();
    #endregion
		
		public TEST()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subtractID", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string subtractID
		{
			get
			{
				return this._subtractID;
			}
			set
			{
				if ((this._subtractID != value))
				{
					this.OnsubtractIDChanging(value);
					this.SendPropertyChanging();
					this._subtractID = value;
					this.SendPropertyChanged("subtractID");
					this.OnsubtractIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TYPE")]
	public partial class TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public TYPE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
